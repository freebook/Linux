<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: chapter.tomcat.install.xml 644 2013-07-22 09:40:47Z netkiller $ -->
<section id="install">
	<title>Tomcat 安装与配置</title>
	<section id="tomcat6">
		<title>Tomcat 6</title>
		<para>解压安装</para>
		<screen>
chmod +x jdk-6u1-linux-i586.bin
./jdk-6u1-linux-i586.bin
输入"yes"回车

mv jdk1.6.0_01 /usr/local/
ln -s /usr/local/jdk1.6.0_01/ /usr/local/java
		</screen>
		<para>/etc/profile.d/java.sh</para>
		<example>
			<title>/etc/profile.d/java.sh</title>
			<screen>
################################################
### Java environment
################################################
export JAVA_HOME=/usr/local/java
export JRE_HOME=/usr/local/java/jre
export PATH=$PATH:/usr/local/java/bin:/usr/local/java/jre/bin
export CLASSPATH="./:/usr/local/java/lib:/usr/local/java/jre/lib:/usr/local/memcached/api/java"
export JAVA_OPTS="-Xms512m -Xmx1024m"
			</screen>
		</example>

		<para>下载binary解压到/usr/local/</para>
		<para>下载软件包</para>
		<screen>
wget http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.13/bin/apache-tomcat-6.0.13.tar.gz
wget http://archive.apache.org/dist/tomcat/tomcat-connectors/native/tomcat-native-1.1.10-src.tar.gz
wget http://archive.apache.org/dist/tomcat/tomcat-connectors/jk/source/jk-1.2.23/tomcat-connectors-1.2.23-src.tar.gz
		</screen>
		<screen>
tar zxvf apache-tomcat-6.0.13.tar.gz
mv apache-tomcat-6.0.13 /usr/local/
ln -s /usr/local/apache-tomcat-6.0.13/ /usr/local/tomcat
		</screen>

		<para>tomcat-native</para>
		<screen>
tar zxvf tomcat-native-1.1.10-src.tar.gz
cd tomcat-native-1.1.10-src/jni/native
./configure --with-apr=/usr/local/apache/bin/apr-1-config --with-java-home=/usr/local/java/
make
make install
		</screen>

		<para>catalina.sh</para>
		<screen>
CATALINA_OPTS="-Djava.library.path=/usr/local/apr/lib"
JAVA_OPTS="-Xss128k -Xms128m -Xmx1024m -XX:PermSize=128M -XX:MaxPermSize=256m -XX:MaxNewSize=256m"
		</screen>
		<para>启动</para>
		<screen>
startup.sh
		</screen>

		<section>
			<title>tomcat-native</title>
			<screen>
			<![CDATA[
cd /usr/local/tomcat-6.0.18/bin
tar zxvf tomcat-native.tar.gz
cd tomcat-native-1.1.14-src/jni/native
./configure --with-apr=/usr/local/apr --with-java-home=/usr/java/jdk1.6.0_11
make && make install
			]]>
			</screen>
		</section>

		<section>
			<title>启动脚本</title>
			<example>
				<title>/etc/init.d/tomcat</title>
				<screen>
				<![CDATA[
# cat /etc/init.d/tomcat
#!/bin/bash
# description: Tomcat Start Stop Restart
# processname: tomcat
# chkconfig: 234 20 80

JAVA_HOME=/srv/java
CATALINA_HOME=/srv/apache-tomcat

# Source function library.
. /etc/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

if [ -f /etc/sysconfig/tomcat ]; then
        . /etc/sysconfig/tomcat
fi

prog=tomcat
lockfile=/var/lock/subsys/$prog
pidfile=${PIDFILE-/var/run/$prog.pid}
lockfile=${LOCKFILE-/var/lock/subsys/$prog}
RETVAL=0
OPTIONS="--pidfile=${pidfile}"

start(){
        # Start daemons.
        echo -n $"Starting $prog: "
        #daemon $prog $OPTIONS
	$CATALINA_HOME/bin/startup.sh
	RETVAL=$?
        echo
	[ $RETVAL -eq 0 ] && touch $lockfile
	return $RETVAL

}

stop() {
	echo -n $"Stopping $prog: "
#	killproc -p ${pidfile} -d 10 $httpd
	$CATALINA_HOME/bin/shutdown.sh
	RETVAL=$?
	echo
	[ $RETVAL = 0 ] && rm -f ${lockfile} ${pidfile}
}

case $1 in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        start
        stop
    ;;
esac
exit 0
				]]>
				</screen>
			</example>
			<para>创建 /etc/init.d/tomcat 文件，复制并粘贴上面的启动脚本</para>
			<screen>
vim /etc/init.d/tomcat
chmod +x /etc/init.d/tomcat
chkconfig --add tomcat
chkconfig --level 234 tomcat on
chkconfig --list tomcat
			</screen>
		</section>
	</section>

	<section id="tomcat7">
		<title>Tomcat 7</title>
		<section>
			<title>Server JRE</title>
			<para>安装  Server JRE</para>
			<screen>
cd /usr/local/src/

tar zxvf server-jre-7u21-linux-x64.gz
mv jdk1.7.0_21 /srv/
ln -s /srv/jdk1.7.0_21 /srv/java
			</screen>
			<para>或者</para>
			<screen>
curl -sS https://raw.github.com/netkiller/shell/master/java/server-jre.sh | bash
			</screen>
		</section>
		<section>
			<title>Tomcat</title>
			<para>安装下面步骤安装Tomcat，注意不要使用root启动tomcat。这里使用www用户启动tomcat,这样的目的是让tomcat进程继承www用户权限。</para>
			<screen>
			<![CDATA[
cd /usr/local/src/
wget http://ftp.cuhk.edu.hk/pub/packages/apache.org/tomcat/tomcat-7/v7.0.40/bin/apache-tomcat-7.0.40.tar.gz
tar zxvf apache-tomcat-7.0.40.tar.gz

mv apache-tomcat-7.0.40 /srv/
ln -s /srv/apache-tomcat-7.0.40 /srv/apache-tomcat
rm -rf /srv/apache-tomcat/webapps/*

cat > /srv/apache-tomcat/bin/setenv.sh <<'EOF'
export JAVA_HOME=/srv/java
export JAVA_OPTS="-server -Xms512m -Xmx8192m  -XX:PermSize=64M -XX:MaxPermSize=512m"
export CATALINA_HOME=/srv/apache-tomcat
export CLASSPATH=$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$CATALINA_HOME/lib:
export PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$CATALINA_HOME/bin:
EOF

cp /srv/apache-tomcat/conf/server.xml{,.original}

groupadd -g 80 www
adduser -o --home /srv --uid 80 --gid 80 -c "Web Application" www

chown www:www -R /srv/*

su - www -c "/srv/apache-tomcat/bin/startup.sh"
			]]>
			</screen>
			<para>或者运行下面脚本快速安装</para>
			<screen>
curl -sS https://raw.github.com/netkiller/shell/master/apache/tomcat/install.sh | bash
			</screen>
		</section>
	</section>
	<section id="tomcat8">
		<title>Java 8 + Tomcat 8</title>
		<para>安装Java 8</para>
		<screen>
		<![CDATA[
cd /usr/local/src/

tar zxf server-jre-8u20-linux-x64.gz 
mv jdk1.8.0_20 /srv/
ln -s /srv/jdk1.8.0_20 /srv/java

cat >> /etc/profile.d/java.sh <<'EOF'
export JAVA_HOME=/srv/java
export JAVA_OPTS="-server -Xms512m -Xmx8192m"
export CLASSPATH=$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$CATALINA_HOME/lib:
export PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$CATALINA_HOME/bin:
EOF		
		]]>
		</screen>
		<note>
			<para>Java 8 取消了 PermSize 与 MaxPermSize 配置项"</para>
		</note>
		<screen>
		<![CDATA[
cd /usr/local/src/
wget http://ftp.cuhk.edu.hk/pub/packages/apache.org/tomcat/tomcat-8/v8.0.12/bin/apache-tomcat-8.0.12.tar.gz
tar zxf apache-tomcat-8.0.12.tar.gz 

mv apache-tomcat-8.0.12 /srv/
ln -s /srv/apache-tomcat-8.0.12 /srv/apache-tomcat
rm -rf /srv/apache-tomcat/webapps/*
cp /srv/apache-tomcat/conf/server.xml{,.original}

cat > /srv/apache-tomcat/bin/setenv.sh <<'EOF'
export JAVA_HOME=/srv/java
export JAVA_OPTS="-server -Xms512m -Xmx8192m"
export CATALINA_HOME=/srv/apache-tomcat
export CLASSPATH=$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$CATALINA_HOME/lib:/srv/IngrianJCE/lib/ext/IngrianNAE-5.1.1.jar
export PATH=$PATH:$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$CATALINA_HOME/bin:
EOF
		]]>
		</screen>
		<para>启动 Tomcat</para>
		<screen>
groupadd -g 80 www
adduser -o --home /www --uid 80 --gid 80 -c "Web Application" www

chown www:www -R /srv/apache-tomcat-*

su - www -c "/srv/apache-tomcat/bin/startup.sh"		
		</screen>
		<section>
			<title>systemctl 启动脚本</title>
			<screen>
curl -s https://raw.githubusercontent.com/oscm/shell/master/web/tomcat/systemctl.sh | bash
			</screen>
		</section>
		<section>
			<title>Session 共享</title>
			<screen>
$ git clone https://github.com/netkiller/redis-session-manager.git
$ cd redis-session-manager/
$ mvn package
$ ls target/redis-session-manager-2.1.1-SNAPSHOT.jar 
redis-session-manager-2.1.1-SNAPSHOT.jar

$ cp target/redis-session-manager-2.1.1-SNAPSHOT.jar /srv/apache-tomcat/apache-tomcat-8.5.11/lib/
$ cp target/dependency/* /srv/apache-tomcat/apache-tomcat-8.5.11/lib/
			</screen>
			<para>如果Redis是 127.0.0.1 配置 conf/context.xml 加入下面一行，</para>
			<screen>
			<![CDATA[
<Manager className="com.crimsonhexagon.rsm.redisson.SingleServerSessionManager" />			
			]]>
			</screen>
			<para>完整的配置</para>
			<screen>
			<![CDATA[
    <Manager className="com.crimsonhexagon.rsm.redisson.SingleServerSessionManager"
    endpoint="localhost:6379"
    sessionKeyPrefix="JSESSIONID"
    saveOnChange="false"
    forceSaveAfterRequest="false"
    dirtyOnMutation="false"
    ignorePattern=".*\\.(ico|png|gif|jpg|jpeg|swf|css|js)$"
    connectionPoolSize="100"
    database="0"
    password=""
    timeout="60000"
    pingTimeout="1000"
    retryAttempts="20"
    retryInterval="1000"
    />
			]]>
			</screen>
		</section>
	</section>
	<section id="firewall">
		<title>防火墙配置</title>
		<screen>
iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 8080 -j ACCEPT
		</screen>

		<para>80 跳转 8080 方案</para>
		<screen>
iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
		</screen>
		<para>取消跳转</para>
		<screen>
iptables -t nat -D PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
		</screen>
		<para>查看规则</para>
		<screen>
iptables -t nat -L
		</screen>
		<example>
			<title>tomcat firewall</title>
			<para>下面是完整的例子，仅供参考，复制到 /etc/sysconfig/iptables 文件中，重启iptables即可生效。</para>
			<screen>
# cat /etc/sysconfig/iptables
# Generated by iptables-save v1.4.7 on Mon Jul 22 15:58:35 2013
*nat
:PREROUTING ACCEPT [7:847]
:POSTROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A PREROUTING -p tcp -m tcp --dport 80 -j REDIRECT --to-port 8080
COMMIT
# Completed on Mon Jul 22 15:58:35 2013
# Generated by iptables-save v1.4.7 on Mon Jul 22 15:58:35 2013
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [42303:3464247]
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 22 -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 8080 -j ACCEPT
-A INPUT -p tcp -m state --state NEW -m tcp --dport 80 -j ACCEPT
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT
# Completed on Mon Jul 22 15:58:35 2013
			</screen>
		</example>
	</section>
	
	<section id="multiple-instances">
		<title>同时运行多实例</title>
		<para>创建工作目录</para>
		<screen>
mkdir /srv/apache-tomcat
		</screen>
		<para>每个端口一个目录</para>
		<screen>
tar zxvf apache-tomcat-7.0.x.tar.gz
mv  apache-tomcat-7.0.x /srv/apache-tomcat/8080

tar zxvf apache-tomcat-7.0.x.tar.gz
mv  apache-tomcat-7.0.x /srv/apache-tomcat/9090
		</screen>
		<para>修改 Server port="8006" 与 Connector port="9090"端口，不要出现重复。</para>
		<screen>
		<![CDATA[

<Server port="8006" shutdown="SHUTDOWN">


 <Connector port="9090" protocol="HTTP/1.1"
               connectionTimeout="20000"
               redirectPort="8443" />

<!--
    <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />
-->
		]]>
		</screen>
		<para>启动tomcat然后观察catalina.log日志文件，确认每个进程都正确启动。</para>
	</section>
	<section id="test">
		<title>Testing file</title>
		<para>创建测试文件</para>
		<command>vim webapps/ROOT/index.jsp</command>
		<screen>
		<![CDATA[
<%@ page contentType="text/html;charset=utf-8"%>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>helloworld!</title>
</head>

<body>
<h1>
<%="It works!"%>
</h1>
<%
out.println("<h3>Hello World!</h3>");
%>
<hr />
<%=new java.util.Date()%>
</body>
</html>
		]]>
		</screen>
		<para>使用curl命令测试，测试结果类似下面结果。</para>
		<screen>
		<![CDATA[
$ curl http://192.168.6.9/index.jsp

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>helloworld!</title>
</head>

<body>
<h1>
It works!
</h1>
<h3>Hello World!</h3>

<hr />
Mon Jul 22 16:41:46 HKT 2013
</body>
</html>
		]]>
		</screen>
	</section>

	<section id="mod_jk">
		<title>mod_jk</title>
		<para>mod_jk 安装</para>
		<screen>
tar zxvf tomcat-connectors-1.2.23-src.tar.gz
cd tomcat-connectors-1.2.23-src/native/
./configure --with-apxs=/usr/local/apache/bin/apxs
make
make install
chmod 755 /usr/local/apache/modules/mod_jk.so
		</screen>
		<para>httpd.conf 尾部加入</para>
		<screen>
Include conf/mod_jk.conf
		</screen>
		<para>配置workers.properties</para>
		<command>apache/conf/workers.properties</command>
		<screen>
# Define 1 real worker using ajp13
worker.list=worker1
# Set properties for worker1 (ajp13)
worker.worker1.type=ajp13
worker.worker1.host=127.0.0.1
worker.worker1.port=8009
worker.worker1.lbfactor=1
worker.worker1.cachesize=128
worker.worker1.cache_timeout=600
worker.worker1.socket_keepalive=1
worker.worker1.reclycle_timeout=300
		</screen>

		<para>mod_jk.conf</para>
		<command>apache/conf/mod_jk.conf</command>
		<screen>
		<![CDATA[
[chenjingfeng@d3010 Includes]$ cat mod_jk.conf
<IfModule mod_jk.c>
# Load mod_jk module
LoadModule jk_module            modules/mod_jk.so
# Where to find workers.properties
JkWorkersFile           /usr/local/apache/conf/workers.properties
# Where to put jk logs
JkLogFile               /usr/local/apache/logs/mod_jk.log
# Set the jk log level [debug/error/info]
JkLogLevel              error
# Select the log format
JkLogStampFormat "[%a %b %d %H:%M:%S %Y] "
# JkOptions indicate to send SSL KEY SIZE,
JkOptions     +ForwardKeySize +ForwardURICompat -ForwardDirectories
# JkRequestLogFormat set the request format
JkRequestLogFormat     "%w %V %T"
JkShmFile     /usr/local/apache2/logs/mod_jk.shm
# Send jsp,servlet for context * to worker named worker1
JkMount  /status/* worker1
JkMount  /*.jsp worker1
JkMount  /*.jsps worker1
JkMount  /*.do worker1
JkMount  /*Servlet worker1
JkMount  /jk/* worker1
</IfModule>
		]]>
		</screen>
		<para>分别测试apache,tomcat</para>
	</section>
	<section id="proxy_ajp">
		<title>mod_proxy_ajp</title>
		<para>包含虚拟主机配置文件</para>
		<command># vi conf/httpd.conf</command>
		<screen>
# Virtual hosts
Include conf/extra/httpd-vhosts.conf
		</screen>
		<para>虚拟主机中配置ProxyPass,ProxyPassReverse</para>
		<command># vi conf/extra/httpd-vhosts.conf</command>
		<screen>
		<![CDATA[
<VirtualHost *:80>
    ServerName netkiller.8800.org
    ProxyPass /images !
	ProxyPass /css !
	ProxyPass /js !
    ProxyPass /ajp ajp://localhost:8009/ajp
    ProxyPassReverse /ajp ajp://localhost:8009/ajp
</VirtualHost>
		]]>
		</screen>
		<para>反向代理和均衡负载模块</para>
		<screen>
		<![CDATA[
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
LoadModule proxy_balancer_module modules/mod_proxy_balancer.so

ProxyPass /admin balancer://tomcatcluster/admin lbmethod=byrequests stickysession=JSESSIONID nofailover=Off timeout=5 maxattempts=3
ProxyPassReverse /admin balancer://tomcatcluster/admin

<Proxy balancer://tomcatcluster>
	BalancerMember ajp://localhost:8009 route=web1
	BalancerMember ajp://localhost:10009 smax=10 route=web2
	BalancerMember ajp://localhost:11009 route=web3
	BalancerMember ajp://localhost:12009 smax=10 route=web4
</Proxy>
		]]>
		</screen>
	</section>
	<section id="rewrite">
		<title>RewriteEngine 连接 Tomcat</title>
		<screen>
		<![CDATA[
RewriteEngine On

RewriteRule ^/(.*) ajp://localhost:8009/ajp/$1 [P]
RewriteRule ^/(.*\.(jsp|do|sevlet)) ajp://localhost:8009/ajp/$1 [P]
		]]>
		</screen>
	</section>

</section>