<?xml version="1.0" encoding="UTF-8"?>
<section id="envsubst">
	<title>envsubst - substitutes environment variables in shell format strings</title>
	<subtitle>替代品在shell环境变量的格式字符串，类似模版替换操作</subtitle>
	<para></para>
	<screen>
	<![CDATA[
[root@localhost tmp]# echo "welcome $HOME ${USER:=a8m}" | envsubst
welcome /root root	
	]]>
	</screen>
	<screen>
	<![CDATA[
[root@localhost tmp]# cat config.template 
HOME=${HOME}
USER=${USER}

[root@localhost tmp]# envsubst < config.template > config.conf

[root@localhost tmp]# cat config.conf 
HOME=/root
USER=root
	]]>
	</screen>
	<para>只替换 ${USER} 变量</para>
	<screen>
	<![CDATA[
[root@localhost tmp]# envsubst '${USER}' < config.template > config.conf
[root@localhost tmp]# cat config.conf 
HOME=${HOME}
USER=root	
	]]>
	</screen>
	<para>模版变量</para>
	<screen>
	<![CDATA[
${var}				var值( 与 $var 相同)
${var-$DEFAULT}		如果未设置 var，则将表达式计算为 $DEFAULT
${var:-$DEFAULT}	如果未设置var或者为空，则将表达式计算为 $DEFAULT
${var=$DEFAULT}		如果未设置 var，则将表达式计算为 $DEFAULT
${var:=$DEFAULT}	如果未设置var或者为空，则将表达式计算为 $DEFAULT
${var+$OTHER}		如果为 var，则将表达式计算为 $OTHER,，否则为空字符串
${var:+$OTHER}		如果为 var，则将表达式计算为 $OTHER,，否则为空字符串	
	]]>
	</screen>
</section>

<section id="parallel">
		<title>parallel - build and execute shell command lines from standard input in parallel</title>
		<subtitle>并行执行shell命令</subtitle>
		<screen>
			$ sudo apt-get install parallel
		</screen>
		<example>
			<title>parallel - build and execute shell command lines from standard input in parallel</title>
			<screen>
				$ cat *.csv | parallel --pipe grep '13113'
			</screen>
			<para>设置块大小</para>
			<screen>
				$ cat *.csv | parallel --block 10M --pipe grep '131136688'
			</screen>
		</example>
	</section>
	<section id="multitail">
		<title>multitail</title>
		<screen>
		<![CDATA[
dnf -y install epel-release
dnf -y update

dnf install -y gcc gcc-c++ make automake autoconf patch
dnf install -y git
dnf install -y python36
dnf install -y ncurses-devel


cd /usr/local/src/
git clone git://github.com/martine/ninja.git
cd ninja/
python3 bootstrap.py
cp ninja /usr/local/bin/

cd /usr/local/src/
git clone https://github.com/flok99/multitail.git
cd multitail/
make install
		]]>
		</screen>
		<para>安装出错</para>
		<screen>
		<![CDATA[
[root@localhost multitail]# make install
cmake --build ../.build-multitail-Debug --target install
ninja: error: loading 'build.ninja': No such file or directory
make: *** [GNUmakefile:65: install] Error 1		
		]]>
		</screen>
	</section>


	<section id="log">
		<title>Logging</title>
		<section id="logger">
			<title>logger - a shell command interface to the syslog(3) system log module</title>
			<screen>
		<![CDATA[
# logger -p local0.notice -t HOSTIDM -f /dev/idmc
# tail /var/log/messages

# logger -p local0.notice -t passwd -f /etc/passwd
# tail /var/log/syslog

# logger -p user.notice -t neo -f /etc/passwd
# tail /var/log/syslog
# tail /var/log/messages

# logger -i -s -p local3.info -t passwd -f /etc/passwd
# tail /var/log/messages
		]]>
			</screen>
		</section>
	</section>

	<section id="password">
		<title>Password</title>
		<section>
			<title>Shadow password suite configuration.</title>
			<screen>
			<![CDATA[
# cat /etc/login.defs
# *REQUIRED*
# Directory where mailboxes reside, _or_ name of file, relative to the
# home directory. If you _do_ define both, MAIL_DIR takes precedence.
# QMAIL_DIR is for Qmail
#
#QMAIL_DIR Maildir
MAIL_DIR /var/spool/mail
#MAIL_FILE .mail

# Password aging controls:
#
# PASS_MAX_DAYS Maximum number of days a password may be used.
# PASS_MIN_DAYS Minimum number of days allowed between password changes.
# PASS_MIN_LEN Minimum acceptable password length.
# PASS_WARN_AGE Number of days warning given before a password expires.
#
PASS_MAX_DAYS 99999
PASS_MIN_DAYS 0
PASS_MIN_LEN 5
PASS_WARN_AGE 7

#
# Min/max values for automatic uid selection in useradd
#
UID_MIN 500
UID_MAX 60000

#
# Min/max values for automatic gid selection in groupadd
#
GID_MIN 500
GID_MAX 60000

#
# If defined, this command is run when removing a user.
# It should remove any at/cron/print jobs etc. owned by
# the user to be removed (passed as the first argument).
#
#USERDEL_CMD /usr/sbin/userdel_local

#
# If useradd should create home directories for users by default
# On RH systems, we do. This option is overridden with the -m flag on
# useradd command line.
#
CREATE_HOME yes

# The permission mask is initialized to this value. If not specified,
# the permission mask will be initialized to 022.
UMASK 077

# This enables userdel to remove user groups if no members exist.
#
USERGROUPS_ENAB yes

# Use MD5 or DES to encrypt password? Red Hat use MD5 by default.
MD5_CRYPT_ENAB yes

ENCRYPT_METHOD MD5
				]]>
			</screen>
		</section>
		<section id="newusers">
			<title>newusers - update and create new users in batch</title>
			<para></para>
			<screen>
			<![CDATA[
# cat userfile.txt
www00:x:520:520::/home/www00:/sbin/nologin
www01:x:521:521::/home/www01:/sbin/nologin
www02:x:522:522::/home/www02:/sbin/nologin
www03:x:523:523::/home/www03:/sbin/nologin
www04:x:524:524::/home/www04:/sbin/nologin
www05:x:525:525::/home/www05:/sbin/nologin
www06:x:526:526::/home/www06:/sbin/nologin
www07:x:527:527::/home/www07:/sbin/nologin
www08:x:528:528::/home/www08:/sbin/nologin
www09:x:529:529::/home/www09:/sbin/nologin

# newusers userfile.txt			
			]]>
			</screen>
		</section>
		<section id="chpasswd">
			<title>chpasswd - update passwords in batch mode</title>
			<para>
				<command>echo "user:password" | chpasswd</command>
			</para>
			<screen>
			<![CDATA[
[root@dev1 ~]# adduser test
[root@dev1 ~]# echo "test:123456" | chpasswd			
			]]>
			</screen>
			<para></para>
			<screen>
			<![CDATA[
# cat passwd.txt
neo:neopass
jam:jampass

# cat passwd.txt | chpasswd			
			]]>
			</screen>
			<screen>
			<![CDATA[
#　chpasswd　-c　<　passwd.txt
			]]>
			</screen>
			<para>passwd 命令实现相同功能</para>
			<screen>
				echo "mypasword" | passwd –stdin neo
			</screen>
		</section>
		
		<section id="sshpass">
			<title>sshpass - noninteractive ssh password provider</title>
			<screen>
			<![CDATA[
sudo apt install -y sshpass

root@ubuntu:~# sshpass -v
Usage: sshpass [-f|-d|-p|-e] [-hV] command parameters
   -f filename   Take password to use from file
   -d number     Use number as file descriptor for getting password
   -p password   Provide password as argument (security unwise)
   -e            Password is passed as env-var "SSHPASS"
   With no parameters - password will be taken from stdin

   -P prompt     Which string should sshpass search for to detect a password prompt
   -v            Be verbose about what you're doing
   -h            Show help (this screen)
   -V            Print version information
At most one of -f, -d, -p or -e should be used
			]]>
			</screen>
			<para></para>
			<screen>
			<![CDATA[
sshpass -p Password scp target/*.jar root@dev.netkiller.cn:/root/		
			]]>
			</screen>
			<para></para>
			<screen>
			<![CDATA[
sshpass -p Password ssh root@dev.netkiller.cn java -jar /root/java-0.0.1-SNAPSHOT.jar		
			]]>
			</screen>
			
			<section id="sshpass">
			<title>sshpass - noninteractive ssh password provider</title>
			<para><command>sshpass -p 'ssh_password' ssh www.example.org</command></para>
			<screen>
			<![CDATA[
# ssh neo@192.168.6.1
The authenticity of host '192.168.6.1 (192.168.6.1)' can't be established.
RSA key fingerprint is c9:97:95:2a:5c:6a:2f:ac:e8:ac:94:24:b0:5c:45:8a.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '192.168.6.1' (RSA) to the list of known hosts.
neo@192.168.6.1's password: 

[root@centos6]~# sshpass -p 'chen' ssh neo@192.168.6.1
Last login: Wed Nov 13 15:24:50 2013
[neo@NEO ~]$ 			
			]]>
		
			</screen>
		</section>
			
		</section>
	</section>