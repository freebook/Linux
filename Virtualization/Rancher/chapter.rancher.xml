<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="rancher" ?>
	<title>Rancher - Multi-Cluster Kubernetes Management</title>
	<subtitle>Rancher is open-source software for delivering Kubernetes-as-a-Service.</subtitle>
	&section.rancher.xml;
	<section>
		<title>快速入门</title>
		<para>
			<ulink url="https://www.cnrancher.com/docs/rancher/v2.x/cn/overview/quick-start-guide/" />
		</para>

		<graphic format="png" fileref="../images/rancher/url.png" width="800" srccredit="neo" />
		<graphic format="png" fileref="../images/rancher/webui.png" width="800" srccredit="neo" />
		<section>
			<title>API</title>
			<graphic format="png" fileref="../images/rancher/api1.png" width="800" srccredit="neo" />
			<graphic format="png" fileref="../images/rancher/api2.png" width="800" srccredit="neo" />
			<graphic format="png" fileref="../images/rancher/api3.png" width="800" srccredit="neo" />
			<graphic format="png" fileref="../images/rancher/api4.png" width="800" srccredit="neo" />
			<graphic format="png" fileref="../images/rancher/api5.png" width="800" srccredit="neo" />
		</section>
	</section>
	<section>
		<title>Rancher Compose</title>
		<para>Rancher Compose 工具的工作方式是跟 Docker Compose 的工作方式是相似的，Docker Compose 不能远程部署，Rancher Compose 可以部署到指定URL的 Rancher 上。</para>
		<screen>
		<![CDATA[
[root@localhost ~]# rancher-compose 
Usage: rancher-compose [OPTIONS] COMMAND [arg...]

Docker-compose to Rancher

Version: v0.12.5

Author:
  Rancher Labs, Inc.

Options:
  --verbose, --debug               
  --file value, -f value           Specify one or more alternate compose files (default: docker-compose.yml) [$COMPOSE_FILE]
  --project-name value, -p value   Specify an alternate project name (default: directory name) [$COMPOSE_PROJECT_NAME]
  --url value                      Specify the Rancher API endpoint URL [$RANCHER_URL]
  --access-key value               Specify Rancher API access key [$RANCHER_ACCESS_KEY]
  --secret-key value               Specify Rancher API secret key [$RANCHER_SECRET_KEY]
  --rancher-file value, -r value   Specify an alternate Rancher compose file (default: rancher-compose.yml)
  --env-file value, -e value       Specify a file from which to read environment variables
  --bindings-file value, -b value  Specify a file from which to read bindings
  --help, -h                       show help
  --version, -v                    print the version
  
Commands:
  create      Create all services but do not start
  up          Bring all services up
  start       Start services
  logs        Get service logs
  restart     Restart services
  stop, down  Stop services
  scale       Scale services
  rm          Delete services
  pull        Pulls images for services
  upgrade     Perform rolling upgrade between services
  help        Shows a list of commands or help for one command
  
Run 'rancher-compose COMMAND --help' for more information on a command.
		
		]]>
		</screen>
		<section>
			<title>Rancher Compose 命令</title>
			<tip>Rancher Compose 目前不支持 V3 版的 Docker Compose</tip>
			<para>为 RANCHER COMPOSE 设置 RANCHER SERVER</para>
			<screen>
			<![CDATA[
# Set the url that Rancher is on
$ export RANCHER_URL=http://server_ip/
# Set the access key, i.e. username
$ export RANCHER_ACCESS_KEY=<username_of_environment_api_key>
# Set the secret key, i.e. password
$ export RANCHER_SECRET_KEY=<password_of_environment_api_key>				
			]]>
			</screen>
			<para>如果你不想设置环境变量，那么你需要在Rancher Compose 命令中手动送入这些变量:</para>
			<screen>
			<![CDATA[
$ rancher-compose --url http://server_ip --access-key <username_of_environment_api_key> --secret-key <password_of_environment_api_key> up		
			]]>
			</screen>
			<para>Rancher Compose 支持所有 Docker Compose 支持的命令</para>
			<screen>
			<![CDATA[
Name		Description
create		创建所有服务但不启动
up		启动所有服务
start		启动服务
logs		输出服务日志
restart		重启服务
stop, down	停止服务
scale		缩放服务
rm		删除服务
pull		拉取所有服务的镜像
upgrade		服务之间进行滚动升级
help, h		输出命令列表或者指定命令的帮助列表
			]]>
			</screen>
			<para>RANCHER COMPOSE 选项</para>
			<screen>
			<![CDATA[
无论何时你使用 Rancher Compose 命令，这些不同的选项你都可以使用

Name	Description
--verbose, --debug	 
--file, -f [–file option –file option]	指定一个compose 文件 (默认: docker-compose.yml) [$COMPOSE_FILE]
--project-name, -p	指定一个项目名称 (默认: directory name)
--url				执行 Rancher API接口 URL [$RANCHER_URL]
--access-key		指定 Rancher API access key [$RANCHER_ACCESS_KEY]
--secret-key		指定 Rancher API secret key [$RANCHER_SECRET_KEY]
--rancher-file, -r	指定一个 Rancher Compose 文件 (默认: rancher-compose.yml)
--env-file, -e		指定一个环境变量配置文件
--help, -h			输出帮助文本
--version, -v		输出 Rancher Compose 版本	
			]]>
			</screen>
		</section>
		<section>
			<title>操作演示</title>
			<para>API</para>
			<graphic format="png" fileref="../images/rancher/api5.png" width="800" srccredit="neo" />
			<para>准备 docker-compose.yml 文件</para>
			<screen>
			<![CDATA[
rancher-compose --url https://rancher.netkiller.cn/v3 --access-key token-pk9n2 --secret-key p2twn42xps9nmh74qm5k5fhfn8rxqhlwv7q9hzcvbvqk5tsqwdh4tc up
			]]>
			</screen>
		</section>
	</section>
	&section.rancher.cli.xml;
	&section.rancher.k3s.xml;
	&section.rancher.example.xml;
	<section>
		<title>FAQ</title>
		<section>
			<title>调试 Rancher 查看日志</title>
			<screen>
		<![CDATA[
neo@ubuntu:~$ docker logs -f rancher		
		]]>
			</screen>

			<screen>
		<![CDATA[
$ curl -L http://127.0.0.1:2379/health

{"health": "true"}
		
		]]>
			</screen>
		</section>
		<section>
			<title> [network] Host [rancher.netkiller.cn] is not able to connect to the following ports: [rancher.netkiller.cn:2379]. Please check network policies and firewall rules</title>
			<para>提示错误</para>
			<para> [network] Host [rancher.netkiller.cn] is not able to connect to the following ports: [rancher.netkiller.cn:2379]. Please check network policies and firewall rules</para>
			<para>排查</para>
			<screen>
			<![CDATA[
$ docker logs -f share-mnt

Error response from daemon: {"message":"No such container: kubelet"}
Error: failed to start containers: kubelet
			]]>
			</screen>
			<screen>
			<![CDATA[
neo@m-1d41c853af58:~$ snap list
Name      Version         Rev    Tracking   Publisher   Notes
core      16-2.37.4       6531   stable     canonical✓  core
go        1.12            3318   stable     mwhudson    classic
kubectl   1.13.4          780    stable     canonical✓  classic
lxd       3.11            10343  stable/…   canonical✓  -
microk8s  v1.14.0-beta.1  442    1.14/beta  canonical✓  classic

neo@m-1d41c853af58:~$ snap remove microk8s kubectl lxd
error: access denied (try with sudo)

neo@m-1d41c853af58:~$ sudo snap remove microk8s kubectl lxd
sudo: unable to resolve host m-1d41c853af58: Invalid argument
microk8s removed
kubectl removed
lxd removed
			
			]]>
			</screen>
		</section>
	</section>
</chapter>