<?xml version="1.0" encoding="UTF-8"?>
<section id="example.redis">
	<title>Redis</title>
	<para>http://download.redis.io/redis-stable/redis.conf</para>
	<para>http://download.redis.io/redis-stable/sentinel.conf</para>
	<section>
		<title>Docker 命令</title>
		<section>
			<title>获取 Redis 镜像</title>
			<para>docker pull redis</para>
			<screen>
		<![CDATA[
# docker pull redis  
Using default tag: latest
latest: Pulling from library/redis
10a267c67f42: Pull complete 
5b690bc4eaa6: Pull complete 
4cdd94354d2a: Pull complete 
71c1f30d820f: Pull complete 
c54584150374: Pull complete 
d1f9221193a6: Pull complete 
d45bc46b48e4: Pull complete 
Digest: sha256:548a75066f3f280eb017a6ccda34c561ccf4f25459ef8e36d6ea582b6af1decf
Status: Downloaded newer image for redis:latest
		]]>
			</screen>
		</section>
		<section>
			<title>启动一个 Redis 实例</title>
			<screen>
				# docker run --name my-redis -d redis
				10207174e18f61290f9c869e6437fa787e459e07b076b82cedf800a8c37c515d
			</screen>
			<para>查看启动情况</para>
			<screen>
		<![CDATA[
# docker ps 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
10207174e18f        redis               "docker-entrypoint..."   8 minutes ago       Up 8 minutes        6379/tcp            my-redis
		]]>
			</screen>
		</section>
		<section>
			<title>进入 Redis </title>
			<screen>
		<![CDATA[
# docker run -it --link my-redis:redis --rm redis redis-cli -h redis -p 6379
redis:6379> set name neo
OK
redis:6379> get name
"neo"
redis:6379> exit
		]]>
			</screen>
		</section>

		<section>
			<title>启动一个 Redis 实例并映射 6379 端口</title>
			<screen>
		<![CDATA[
# docker stop my-redis
my-redis		
		
# docker rm my-redis
my-redis

# docker run --name my-redis -d -p 6379:6379 redis
10207174e18f61290f9c869e6437fa787e459e07b076b82cedf800a8c37c515d

# docker ps -a                                    
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
1c4540d8617f        redis               "docker-entrypoint..."   2 seconds ago       Up 1 second         0.0.0.0:6379->6379/tcp   my-redis
		]]>
			</screen>
			<para>检查端口</para>
			<screen>
		<![CDATA[
# ss -lnt | grep 6379
LISTEN     0      128         :::6379                    :::*  
		]]>
			</screen>
		</section>
		<section>
			<title>维护容器</title>
			<para>使用下面命令进入容器维护 Redis</para>
			<screen>
		<![CDATA[
# docker exec -it my-redis /bin/bash
root@1c4540d8617f:/data#

root@1c4540d8617f:/data# redis-server -v
Redis server v=3.2.9 sha=00000000:0 malloc=jemalloc-4.0.3 bits=64 build=a30533b464d1689b
		]]>
			</screen>
		</section>
	</section>
	<section>
		<title>Docker compose</title>
		<screen>
		<![CDATA[
version: "3.7"
services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/var/lib/redis
    restart: always
    networks:
      - dev

networks:
  dev:
    driver: bridge

volumes:
  redis_data:
		]]>
		</screen>
	</section>
	<section>
		<title>Docker Stack</title>
		<para></para>
		<screen>
		<![CDATA[
version: '3.8'

services:
  redis:
    image: redis:latest
    environment:
      - TZ=Asia/Shanghai
    hostname: redis
    ports:
      - 6379:6379
    networks:
      - test
    volumes:
      - data:/var/lib/redis
    configs:
      - source: config
        target: /usr/local/etc/redis.conf
        mode: 0440
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: "1"
          memory: 512M
      update_config:
        parallelism: 1
        delay: 5s
        monitor: 10s
        max_failure_ratio: 0.1
        order: start-first

configs:
  config:
    file: ./redis.conf

volumes:
  data:

networks:
   test:
     driver: overlay		
		]]>
		</screen>
		<para>下载 配置文件 <ulink url="https://redis.io/topics/config" /></para>
		<screen>
		<![CDATA[
iMac:redis neo$ curl -sO https://raw.githubusercontent.com/redis/redis/6.0/redis.conf
iMac:redis neo$ egrep -v "^#|^$" redis.conf 
		]]>
		</screen>
		<para>修改配置文件</para>
		<screen>
		<![CDATA[
bind 0.0.0.0
logfile "/var/log/redis/redis.log"
dir /var/lib/redis	
appendonly yes	
		]]>
		</screen>
		<!-- sed -i "69s|bind 127.0.0.1|bind 0.0.0.0|" redis.conf -->
		<para>创建 Docker 网络</para>
		<screen>
		<![CDATA[
iMac:redis neo$ docker network create \
>   --driver=overlay \
>   --subnet=172.12.0.0/16 \
>   --ip-range=172.12.0.0/16 \
>   --gateway=172.12.0.1 \
>   --attachable \
>   test
gvcz5y66ovrlqfaxb02zx026t

iMac:redis neo$ docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
786efe30f42d        bridge              bridge              local
51e2b21d7daa        docker_gwbridge     bridge              local
96ba0de26cd2        host                host                local
7r7k9robn0uu        ingress             overlay             swarm
cbf078a5f121        none                null                local
d851mrlkludv        redis_default       overlay             swarm
q0h9awx86ef4        registry_default    overlay             swarm
cf585ea9ceb4        registry_default    bridge              local
gvcz5y66ovrl        test                overlay             swarm
		
iMac:redis neo$ docker stack deploy -c redis.yml redis
Creating network redis_default
Creating service redis_redis		
		]]>
		</screen>
		<para>查看服务</para>
		<screen>
		<![CDATA[
iMac:redis neo$ docker service ls
ID                  NAME                MODE                REPLICAS            IMAGE               PORTS
1ti2ndlpdhm8        redis_redis         replicated          0/1                 redis:latest        *:6379->6379/tcp
1w6xjrl0sn88        registry_registry   replicated          1/1                 registry:latest     *:5000->5000/tcp		
		]]>
		</screen>
		<para>查看容器运行状态</para>
		<screen>
		<![CDATA[
iMac:redis neo$ docker container ls
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES
8407fd8fe66b        redis:latest        "docker-entrypoint.s…"   29 seconds ago      Up 29 seconds       6379/tcp            redis_redis.1.6fpqt3pdti03j9swn3x04ob9n		
		]]>
		</screen>
	</section>
</section>