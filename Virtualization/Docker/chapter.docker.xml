<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="docker" ?>
	<title>Docker</title>
	<para><ulink url="https://www.docker.com" /></para>
	&chapter.docker.install.xml;
	<section id="images">
		<title>镜像</title>
		<para>Docker 镜像地址 <ulink url="https://registry.hub.docker.com/">https://registry.hub.docker.com/</ulink></para>
		<section>
			<title>搜索镜像</title>
			<screen>
$ sudo docker search centos |more
NAME                                            DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED
centos                                          The official build of CentOS.                   542       [OK]       
tianon/centos                                   CentOS 5 and 6, created using rinse instea...   28                   
ansible/centos7-ansible                         Ansible on Centos7                              13                   [OK]
saltstack/centos-6-minimal                                                                      7                    [OK]
blalor/centos                                   Bare-bones base CentOS 6.5 image                7                    [OK]
steeef/graphite-centos                          CentOS 6.x with Graphite and Carbon via ng...   6                    [OK]
ariya/centos6-teamcity-server                   TeamCity Server 8.1 on CentOS 6                 6                    [OK]
tutum/centos                                    Centos image with SSH access. For the root...   5                    [OK]
tutum/centos-6.4                                DEPRECATED. Use tutum/centos:6.4 instead. ...   5                    [OK]			
			</screen>
		</section>
		<section>
			<title>获取镜像</title>
			<para>可以使用 docker pull 命令来从官网仓库获取所需要的镜像。</para>
			<screen>
$ sudo docker pull ubuntu:14.04
			</screen>
			<para>等同于</para>
			<screen>
$ sudo docker pull registry.hub.docker.com/ubuntu:14.04
			</screen>
			<para>获得所有版本镜像</para>
			<screen>
$ sudo docker pull ubuntu	

$ sudo docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
ubuntu              utopic              277eb4304907        3 days ago          215.6 MB
ubuntu              14.10               277eb4304907        3 days ago          215.6 MB
ubuntu              14.04               5506de2b643b        3 days ago          197.8 MB
ubuntu              trusty              5506de2b643b        3 days ago          197.8 MB
ubuntu              latest              5506de2b643b        3 days ago          197.8 MB
ubuntu              14.04.1             5506de2b643b        3 days ago          197.8 MB
ubuntu              precise             0b310e6bf058        3 days ago          116.1 MB
ubuntu              12.04.5             0b310e6bf058        3 days ago          116.1 MB
ubuntu              12.04               0b310e6bf058        3 days ago          116.1 MB
ubuntu              12.10               c5881f11ded9        4 months ago        172.1 MB
ubuntu              quantal             c5881f11ded9        4 months ago        172.1 MB
ubuntu              13.04               463ff6be4238        4 months ago        169.4 MB
ubuntu              raring              463ff6be4238        4 months ago        169.4 MB
ubuntu              13.10               195eb90b5349        4 months ago        184.6 MB
ubuntu              saucy               195eb90b5349        4 months ago        184.6 MB
ubuntu              10.04               3db9c44f4520        6 months ago        183 MB
ubuntu              lucid               3db9c44f4520        6 months ago        183 MB		
			</screen>
			<para>从其他服务器获得镜像</para>
			<screen>
$ sudo docker pull dl.dockerpool.com:5000/ubuntu:12.04
			</screen>
			<para>完成后，即可随时使用该镜像了，例如创建一个容器，让其中运行 bash 应用。</para>
			<screen>
$ sudo docker run -t -i ubuntu:14.10 /bin/bash
			</screen>
		</section>
		<section>
			<title>列出本地镜像</title>
			<screen>
$ sudo docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
ubuntu              14.10               277eb4304907        3 days ago          215.6 MB
ubuntu              latest              5506de2b643b        3 days ago          197.8 MB
			</screen>
		</section>
		<section>
			<title>创建镜像</title>
			<screen>

			</screen>
		</section>
		<section>
			<title>保存和载入镜像</title>
			<para>保存镜像</para>
			<screen>
$sudo docker save -o ubuntu_14.10.tar ubuntu:14.10			
			</screen>
			<para>载入镜像</para>
			<screen>
			<![CDATA[
$ sudo docker load --input ubuntu_14.10.tar
或
$ sudo docker load < ubuntu_14.10.tar
			]]>			
			</screen>
		</section>
		<section>
			<title>删除本地镜像</title>
			<screen>
$ sudo docker rmi ubuntu:12.04
Untagged: ubuntu:12.04
			</screen>
		</section>
	</section>
	<section id="container">
		<title>容器</title>
		<section>
			<title>启动与终止容器</title>
			<screen>
$ sudo docker run ubuntu:14.10 /bin/echo 'Hello world'
Hello world			
			</screen>
			<para>进入BASH</para>
			<screen>
$ sudo docker run -t -i ubuntu:14.10 /bin/bash
root@f8c7b2afff14:/# 			
			</screen>
			<para>start / stop / restart</para>
			<screen>
sudo docker start silly_bohr
silly_bohr

$ sudo docker stop silly_bohr
silly_bohr

$ sudo docker restart silly_bohr
silly_bohr
			</screen>
			<para>守护进程运行</para>
			<screen>
$ sudo docker run -d ubuntu:14.10 /bin/sh -c "while true; do echo hello world; sleep 1; done"
4cdbb75eeabf3f1ea87bec91accdf5211639d0895e94ab94ffa1d55fb7f62e2a
			</screen>
			<para>通过 docker ps 命令来查看容器信息</para>
			<screen>
$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES
4cdbb75eeabf        ubuntu:14.10        "/bin/sh -c 'while t   30 seconds ago      Up 28 seconds                           drunk_rosalind 
			</screen>
			<para>要获取容器的输出信息，可以通过 docker logs 命令。</para>
			<screen>
$ sudo docker logs insane_babbage			
			</screen>
			<para>注意：守护进程在后台运行，所以无输出，只能通过docker logs 命令查看</para>
		</section>
		<section>
			<title>进入容器</title>
			<screen>
$ sudo docker run -idt ubuntu:14.10
793f9805620d7e10564e0778c388640cb73b6a1aec663bf468904d72a4f219f2

$ sudo docker ps 
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
793f9805620d        ubuntu:14.10        "/bin/bash"         5 seconds ago       Up 4 seconds                            mad_elion           

$ sudo docker attach mad_elion 
root@793f9805620d:/# ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
			</screen>
		</section>
		<section>
			<title>导出和导入容器</title>
			<para></para>
			<screen>
			<![CDATA[
$ sudo docker export 7691a814370e > ubuntu.tar
			]]>			
			</screen>
			<para></para>
			<screen>
			<![CDATA[
$ cat ubuntu.tar | sudo docker import - test/ubuntu:v1.0
			]]>			
			</screen>
			<para>指定 URL 或者某个目录来导入，例如</para>
			<screen>
$sudo docker import http://example.com/exampleimage.tgz example/imagerepo			
			</screen>
		</section>
		<section>
			<title>删除容器</title>
			<para>使用 docker rm 来删除一个处于终止状态的容器。</para>
			<screen>
$ sudo docker ps -a
CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS                      PORTS               NAMES
f8c7b2afff14        ubuntu:14.10        "/bin/bash"            14 minutes ago      Exited (0) 2 minutes ago                        agitated_fermat     
0abd2e5fc251        ubuntu:14.10        "/bin/echo 'Hello wo   15 minutes ago      Exited (0) 15 minutes ago                       clever_kowalevski 

$ sudo docker rm clever_kowalevski
clever_kowalevski

$ sudo docker ps -a
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                     PORTS               NAMES
f8c7b2afff14        ubuntu:14.10        "/bin/bash"         16 minutes ago      Exited (0) 5 minutes ago                       agitated_fermat     			
			</screen>
		</section>
	</section>
	<section id="repository">
		<title>仓库</title>
		<section>
			<title>登陆仓库</title>
			<para>登录</para>
			<screen>
$ sudo docker login
Username: netkiller
Password: 
Email: netkiller@msn.com
Login Succeeded
			</screen>
		</section>
	</section>	
	<section id="cli">
		<title>docker 命令</title>
		<section>
			<title>run</title>
			<para>run</para>
			<screen>
$ sudo docker run ubuntu:14.04 /bin/echo 'Hello world'
Hello world
			</screen>
		</section>
		<section>
			<title>start / stop / restart</title>
			<screen>
sudo docker start silly_bohr
silly_bohr

$ sudo docker stop silly_bohr
silly_bohr

$ sudo docker restart silly_bohr
silly_bohr
			</screen>
		</section>
		<section>
			<title>ps</title>
			<screen>
sudo docker ps
			</screen>
			<screen>
$ sudo docker ps -l
CONTAINER ID        IMAGE               COMMAND                CREATED             STATUS              PORTS               NAMES
84391d1de0fc        ubuntu:14.04        /bin/echo Hello worl   31 minutes ago      Exit 0                                  romantic_ritchie
			</screen>
		</section>
		<section>
			<title>top</title>
			<screen>
$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES
13b2a4a31455        ubuntu:14.04        /bin/bash           3 hours ago         Up 3 hours                              silly_bohr

$ sudo docker top silly_bohr
UID                 PID                 PPID                C                   STIME               TTY                 TIME                CMD
root                23225               22908               0                   12:17               pts/14              00:00:00            /bin/bash
			</screen>
		</section>
		<section>
			<title>inspect</title>
			<screen>
			<![CDATA[
$ sudo docker inspect silly_bohr
[{
    "ID": "13b2a4a3145528d087c9d1580fa78aaa52e8a9bb973c9da923bceb9f9b9e7e5a",
    "Created": "2014-07-17T04:17:45.262480632Z",
    "Path": "/bin/bash",
    "Args": [],
    "Config": {
        "Hostname": "13b2a4a31455",
        "Domainname": "",
        "User": "",
        "Memory": 0,
        "MemorySwap": 0,
        "CpuShares": 0,
        "AttachStdin": true,
        "AttachStdout": true,
        "AttachStderr": true,
        "PortSpecs": null,
        "ExposedPorts": null,
        "Tty": true,
        "OpenStdin": true,
        "StdinOnce": true,
        "Env": [
            "HOME=/",
            "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        ],
        "Cmd": [
            "/bin/bash"
        ],
        "Dns": [
            "8.8.8.8",
            "8.8.4.4"
        ],
        "Image": "ubuntu",
        "Volumes": null,
        "VolumesFrom": "",
        "WorkingDir": "",
        "Entrypoint": null,
        "NetworkDisabled": false,
        "OnBuild": null
    },
    "State": {
        "Running": true,
        "Pid": 23225,
        "ExitCode": 0,
        "StartedAt": "2014-07-17T04:17:45.672269614Z",
        "FinishedAt": "0001-01-01T00:00:00Z",
        "Ghost": false
    },
    "Image": "e54ca5efa2e962582a223ca9810f7f1b62ea9b5c3975d14a5da79d3bf6020f37",
    "NetworkSettings": {
        "IPAddress": "172.17.0.2",
        "IPPrefixLen": 16,
        "Gateway": "172.17.42.1",
        "Bridge": "docker0",
        "PortMapping": null,
        "Ports": {}
    },
    "ResolvConfPath": "/var/lib/docker/containers/13b2a4a3145528d087c9d1580fa78aaa52e8a9bb973c9da923bceb9f9b9e7e5a/resolv.conf",
    "HostnamePath": "/var/lib/docker/containers/13b2a4a3145528d087c9d1580fa78aaa52e8a9bb973c9da923bceb9f9b9e7e5a/hostname",
    "HostsPath": "/var/lib/docker/containers/13b2a4a3145528d087c9d1580fa78aaa52e8a9bb973c9da923bceb9f9b9e7e5a/hosts",
    "Name": "/silly_bohr",
    "Driver": "aufs",
    "ExecDriver": "native-0.1",
    "Volumes": {},
    "VolumesRW": {},
    "HostConfig": {
        "Binds": null,
        "ContainerIDFile": "",
        "LxcConf": [],
        "Privileged": false,
        "PortBindings": {},
        "Links": null,
        "PublishAllPorts": false
    }
}]
			]]>
			</screen>
			<screen>
$ sudo docker inspect -f '{{ .NetworkSettings.IPAddress }}' silly_bohr
			</screen>
		</section>
		<section>
			<title>images</title>
			<screen>
$ sudo docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
ubuntu              14.10               58faa899733f        2 weeks ago         196 MB
ubuntu              utopic              58faa899733f        2 weeks ago         196 MB
ubuntu              precise             ea7d6801c538        3 weeks ago         127.5 MB
ubuntu              12.04               ea7d6801c538        3 weeks ago         127.5 MB
ubuntu              12.10               c5881f11ded9        4 weeks ago         172.2 MB
ubuntu              quantal             c5881f11ded9        4 weeks ago         172.2 MB
ubuntu              13.04               463ff6be4238        4 weeks ago         169.4 MB
ubuntu              raring              463ff6be4238        4 weeks ago         169.4 MB
ubuntu              13.10               195eb90b5349        4 weeks ago         184.7 MB
ubuntu              saucy               195eb90b5349        4 weeks ago         184.7 MB
ubuntu              14.04               e54ca5efa2e9        4 weeks ago         276.5 MB
ubuntu              latest              e54ca5efa2e9        4 weeks ago         276.5 MB
ubuntu              trusty              e54ca5efa2e9        4 weeks ago         276.5 MB
ubuntu              10.04               3db9c44f4520        12 weeks ago        183 MB
ubuntu              lucid               3db9c44f4520        12 weeks ago        183 MB
			</screen>
			<section>
				<title>Getting a new image</title>
				<screen>
$ sudo docker pull centos
Pulling repository centos
b7de3133ff98: Pulling dependent layers
5cc9e91966f7: Pulling fs layer
511136ea3c5a: Download complete
ef52fb1fe610: Download complete
				</screen>
			</section>
		</section>
	</section>
</chapter>