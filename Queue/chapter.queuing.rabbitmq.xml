<?xml version="1.0" encoding="UTF-8"?>
<section id="rabbitmq">
	<title>RabbitMQ</title>
	<para><ulink url="http://www.rabbitmq.com/">RabbitMQ</ulink></para>
	<section id="install">
		<title>安装 RabbitMQ</title>
		<para>running on 127.0.0.1 (localhost) on port 5672 (standard AMQP port).</para>
		<section>
			<title>Ubuntu</title>
			<screen>
$ sudo apt-get install rabbitmq-server
			</screen>
		</section>
		<section>
			<title>CentOS</title>
			<screen>
# yum install -y rabbitmq-server
# chkconfig rabbitmq-server on
# service rabbitmq-server start
			</screen>
			<para>添加用户, 添加权限, 删除guest用户</para>
			<screen>
# rabbitmqctl add_user rabbit password
# rabbitmqctl set_permissions -p "/" rabbit ".*" ".*" ".*"
# rabbitmqctl delete_user guest
			</screen>
		</section>
		<section>
			<title>OSCM 一键安装</title>
			<screen>
curl -s https://raw.githubusercontent.com/oscm/shell/master/mq/rabbitmq/rabbitmq-server-3.6.10.sh | bash

rabbitmqctl add_user admin admin123
rabbitmqctl set_user_tags admin administrator
rabbitmqctl set_permissions -p "/" admin ".*" ".*" ".*"
			</screen>
		</section>
		<section>
			<title>检查端口</title>
			<screen>
[root@netkiller ~]# ss -lnt | grep 5672
LISTEN     0      128          *:25672                    *:*                  
LISTEN     0      128         :::5672                    :::*
			</screen>
		</section>
	</section>
	<section id="rabbitmqctl">
		<title>rabbitmqctl - command line tool for managing a RabbitMQ broker</title>
		<screen>
rabbitmqctl status
		</screen>
		<section id="change_password">
			<title>change_password</title>
			<screen>
			<![CDATA[
rabbitmqctl change_password admin <new_password>
			]]>
			</screen>
		</section>
		<section id="list_users">
			<title>list_users</title>
			<screen>
# rabbitmqctl list_users
Listing users ...
guest	[administrator]
...done.
			</screen>
		</section>
		<section id="add_vhost">
			<title>虚拟机管理</title>
			<screen>
$ rabbitmqctl add_vhost test
$ rabbitmqctl add_user testuser password
$ rabbitmqctl set_permissions -p test testuser ".*" ".*" ".*"			
			</screen>
		</section>
		
		<section id="list_queues">
			<title>list_queues</title>
			<screen>
# rabbitmqctl list_queues
Listing queues ...
amq.gen-RhBwbb9EdZ8Fgk_heGZQ2w	0
bb	0
customer	276930
demo	0
email	0
example	0
hello	1
members_id	282
new_members_id	0
q_linvo	0
real	0
...done.
			</screen>
			<screen>

			</screen>
			<screen>
			</screen>
		</section>		
		<section id="list_exchanges">
			<title>list_exchanges</title>
			<screen>
# rabbitmqctl list_exchanges
Listing exchanges ...
	direct
amq.direct	direct
amq.fanout	fanout
amq.headers	headers
amq.match	headers
amq.rabbitmq.log	topic
amq.rabbitmq.trace	topic
amq.topic	topic
email	direct
...done.
			</screen>
		</section>
	</section>
	<section id="rabbitmq-plugins">
		<title>rabbitmq-plugins - command line tool for managing RabbitMQ broker plugins</title>
		<para>启用插件</para>
		<screen>
rabbitmq-plugins enable rabbitmq_management		
		</screen>
		<section>
			<title>rabbitmq_management</title>
			<para>RabbitMQ Management HTTP API (https://cdn.rawgit.com/rabbitmq/rabbitmq-management/rabbitmq_v3_6_0/priv/www/api/index.html)</para>
			<para>启用插件 Management and Monitoring 插件</para>
			<screen>
rabbitmq-plugins enable rabbitmq_management
systemctl restart rabbitmq-server			
			</screen>
			<screen>
# curl -u guest:guest http://localhost:15672/api/overview
{"management_version":"3.3.5","statistics_level":"fine","exchange_types":[{"name":"topic","description":"AMQP topic exchange, as per the AMQP specification","enabled":true},{"name":"fanout","description":"AMQP fanout exchange, as per the AMQP specification","enabled":true},{"name":"direct","description":"AMQP direct exchange, as per the AMQP specification","enabled":true},{"name":"headers","description":"AMQP headers exchange, as per the AMQP specification","enabled":true}],"rabbitmq_version":"3.3.5","cluster_name":"rabbit@iZ623qr3xctZ","erlang_version":"R16B03-1","erlang_full_version":"Erlang R16B03-1 (erts-5.10.4) [source] [64-bit] [smp:8:8] [async-threads:30] [hipe] [kernel-poll:true]","message_stats":{},"queue_totals":{"messages":0,"messages_details":{"rate":0.0},"messages_ready":0,"messages_ready_details":{"rate":0.0},"messages_unacknowledged":0,"messages_unacknowledged_details":{"rate":0.0}},"object_totals":{"consumers":1,"queues":3,"exchanges":10,"connections":1,"channels":1},"node":"rabbit@iZ623qr3xctZ","statistics_db_node":"rabbit@iZ623qr3xctZ","listeners":[{"node":"rabbit@iZ623qr3xctZ","protocol":"amqp","ip_address":"::","port":5672},{"node":"rabbit@iZ623qr3xctZ","protocol":"clustering","ip_address":"::","port":25672}],"contexts":[{"node":"rabbit@iZ623qr3xctZ","description":"RabbitMQ Management","path":"/","port":15672}]}			
			</screen>
			<para>vhosts</para>
			<screen>
# curl -u guest:guest http://localhost:15672/api/vhosts
[{"messages":0,"messages_details":{"rate":0.0},"messages_ready":0,"messages_ready_details":{"rate":0.0},"messages_unacknowledged":0,"messages_unacknowledged_details":{"rate":0.0},"recv_oct":617,"recv_oct_details":{"rate":0.0},"send_oct":625,"send_oct_details":{"rate":0.0},"name":"/","tracing":false}]			
			</screen>
			<para>queues</para>
			<screen>
			<![CDATA[
# curl -s -u guest:guest http://localhost:15672/api/queues/%2f/example | sed 's/,/,\n/g'
{"message_stats":{"ack":817,
"ack_details":{"rate":0.8},
"deliver":829,
"deliver_details":{"rate":0.8},
"deliver_get":829,
"deliver_get_details":{"rate":0.8},
"publish":33700,
"publish_details":{"rate":22.4},
"redeliver":9,
"redeliver_details":{"rate":0.0}},
"messages":32884,
"messages_details":{"rate":39.2},
"messages_ready":32881,
"messages_ready_details":{"rate":39.2},
"messages_unacknowledged":3,
"messages_unacknowledged_details":{"rate":0.0},
"policy":"",
"exclusive_consumer_tag":"",
"consumers":1,
"consumer_utilisation":0.00005551817727208515,
"memory":34387224,
"backing_queue_status":{"q1":0,
"q2":0,
"delta":["delta",
0,
0,
0],
"q3":0,
"q4":32881,
"len":32881,
"pending_acks":3,
"target_ram_count":"infinity",
"ram_msg_count":32881,
"ram_ack_count":3,
"next_seq_id":33700,
"persistent_count":0,
"avg_ingress_rate":31.071205055112543,
"avg_egress_rate":0.7083061832348867,
"avg_ack_ingress_rate":0.7083061832348867,
"avg_ack_egress_rate":0.7083061832348867},
"state":"running",
"incoming":[{"stats":{"publish":33700,
"publish_details":{"rate":22.4}},
"exchange":{"name":"email",
"vhost":"/"}}],
"deliveries":[{"stats":{"redeliver":3,
"redeliver_details":{"rate":0.0},
"deliver_get":348,
"deliver_get_details":{"rate":0.8},
"deliver":348,
"deliver_details":{"rate":0.8},
"ack":345,
"ack_details":{"rate":0.8}},
"channel_details":{"name":"127.0.0.1:41033 -> 127.0.0.1:5672 (1)",
"number":1,
"connection_name":"127.0.0.1:41033 -> 127.0.0.1:5672",
"peer_port":41033,
"peer_host":"127.0.0.1"}}],
"consumer_details":[{"channel_details":{"name":"127.0.0.1:41033 -> 127.0.0.1:5672 (1)",
"number":1,
"connection_name":"127.0.0.1:41033 -> 127.0.0.1:5672",
"peer_port":41033,
"peer_host":"127.0.0.1"},
"queue":{"name":"example",
"vhost":"/"},
"consumer_tag":"amq.ctag-6BSkZzt3eWgBG5Jn2nl4QA",
"exclusive":false,
"ack_required":true,
"prefetch_count":3,
"arguments":{}}],
"name":"example",
"vhost":"/",
"durable":true,
"auto_delete":false,
"arguments":{},
"node":"rabbit@iZ623qr3xctZ"}		
			]]>	
			</screen>
		</section>
	</section>
	<section id="rabbitmq.python.pika">
		<title>Python - Pika</title>
		<para><ulink url="http://pika.github.com/">http://pika.github.com/</ulink></para>
		<screen>
sudo apt-get install python-setuptools python-pip git-core
sudo pip install pika

sudo easy_install pika
		</screen>
	</section>
	<section id="rabbitmq.ruby.amqp">
		<title>Ruby amqp</title>
<!--
$ gem sources -a http://gems.github.com
http://gems.github.com added to sources
-->
		<screen>
$ sudo gem install amqp
		</screen>
		<example>
			<title>Ruby on RabbitMQ</title>
			<para>subscriber.rb</para>
			<screen>
$ cat subscriber.rb
require 'rubygems'
require 'amqp'

EM.run {
  amq = MQ.new
  amq.queue("logins").subscribe do |login|
    puts login
  end
}
			</screen>
			<para>producer.rb</para>
			<screen>
$ cat producer.rb
require 'rubygems'
require 'amqp'

EM.run {
  amq = MQ.new
  queue = amq.queue("logins")
  %w[scott nic robi].each { |login|
      queue.publish(login)
  }
}
			</screen>
			<para>test</para>
			<screen>
$ ruby subscriber.rb

$ ruby producer.rb
			</screen>
		</example>
	</section>
</section>
